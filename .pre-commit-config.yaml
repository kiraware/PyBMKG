ci:
  skip: [pytest]

default_language_version:
  python: python3.12

repos:
  # general checks (see here: https://pre-commit.com/hooks.html)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: end-of-file-fixer
      - id: trailing-whitespace

  # mypy - lint-like type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.9.0
    hooks:
      - id: mypy
        name: mypy

  # bandit - find common security issues
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        name: bandit
        args: [-c, pyproject.toml, -r, .]

  # ruff - linting and format
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: "v0.3.2"
    hooks:
      - id: ruff
        args: [--fix]
        name: ruff
      - id: ruff-format
        name: ruff format

  # pytest - testing
  - repo: local
    hooks:
      - id: pytest
        name: pytest
        entry: poetry run pytest
        language: system
        types: [python]
        pass_filenames: false

  # prettier - formatting Markdown
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types: [text, markdown]
        exclude: ^poetry.lock

  # mkdocs - build the documentation
  - repo: local
    hooks:
      - id: mkdocs-build
        name: Build the MkDocs documentation
        entry: poetry run mkdocs build
        language: system
        files: ^docs/
        types: [text, markdown]
        pass_filenames: false

  # poetry - check, lock, and install
  - repo: https://github.com/python-poetry/poetry
    rev: "1.8.0"
    hooks:
      - id: poetry-check
      - id: poetry-lock
      - id: poetry-install

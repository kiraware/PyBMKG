[tool.poetry]
name = "PyBMKG"
version = "0.1.0"
description = "Python BMKG API Wrapper"
authors = ["Kira <kiraware@github.com>"]
packages = [
    { include = "*", from = "src"}
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/kiraware/PyBMKG#readme"
repository = "https://github.com/kiraware/PyBMKG"
keywords = ["bmkg", "api"]

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = "^3.9.1"
defusedxml = "^0.7.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
mypy = "^1.8.0"
bandit = "^1.7.6"
ruff = "^0.1.13"
pytest-asyncio = "^0.23.3"
poethepoet = "^0.24.4"
mkdocs = "^1.5.3"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}
mkdocs-material = "^9.5.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
backend-path = ["src"]

[tool.pytest.ini_options]
addopts = "-vvv --doctest-modules"
testpaths = ["tests", "src"]
asyncio_mode = "auto"

[tool.poe.tasks]
ruff = "ruff --fix"
bandit = "bandit -r src tests -c pyproject.toml"
mypy = "mypy --check src"
lint = ["mypy", "bandit", "ruff"]
format = "ruff format"
test = "pytest"

[tool.bandit.assert_used]
skips = ["*_test.py", "*test_*.py"]

[tool.ruff]
exclude = [
    ".venv",
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
]
line-length = 88
target-version = "py311"
select = [
    "E",
    "F",
    "W",
    "I",
]
ignore = []
src = ["src", "tests"]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"

[mypy]
files = ["src"]
strict_optional = false
